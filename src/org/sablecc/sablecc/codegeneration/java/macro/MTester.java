/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.java.macro;

import java.util.*;

public class MTester {

    private final List<Object> eDefaultPackage_SpecifiedPackage = new LinkedList<Object>();

    public MTester() {

    }

    public MDefaultPackage newDefaultPackage(
            String pLanguageName) {

        MDefaultPackage lDefaultPackage = new MDefaultPackage(pLanguageName);
        this.eDefaultPackage_SpecifiedPackage.add(lDefaultPackage);
        return lDefaultPackage;
    }

    public MSpecifiedPackage newSpecifiedPackage(
            String pLanguageName,
            String pPackage) {

        MSpecifiedPackage lSpecifiedPackage = new MSpecifiedPackage(
                pLanguageName, pPackage);
        this.eDefaultPackage_SpecifiedPackage.add(lSpecifiedPackage);
        return lSpecifiedPackage;
    }

    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        sb.append(new MHeader().toString());
        if (this.eDefaultPackage_SpecifiedPackage.size() > 0) {
            sb.append(System.getProperty("line.separator"));
        }
        for (Object oDefaultPackage_SpecifiedPackage : this.eDefaultPackage_SpecifiedPackage) {
            sb.append(oDefaultPackage_SpecifiedPackage.toString());
        }
        sb.append(System.getProperty("line.separator"));
        sb.append("import java.io.*;");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("public class Tester {");
        sb.append(System.getProperty("line.separator"));
        sb.append(System.getProperty("line.separator"));
        sb.append("        static public void main(String[] args) {");
        sb.append(System.getProperty("line.separator"));
        sb.append("                try {");
        sb.append(System.getProperty("line.separator"));
        sb
                .append("                        Reader reader = new FileReader(args[0]);");
        sb.append(System.getProperty("line.separator"));
        sb.append("                        Lexer lexer = new Lexer(reader);");
        sb.append(System.getProperty("line.separator"));
        sb.append("                        Token token;");
        sb.append(System.getProperty("line.separator"));
        sb.append("                        do {");
        sb.append(System.getProperty("line.separator"));
        sb.append("                                token = lexer.next();");
        sb.append(System.getProperty("line.separator"));
        sb
                .append("                                System.out.println(token.getType() + \"@\" + token.getLine() + \",\" + token.getPos() + \":\" + token.getText());");
        sb.append(System.getProperty("line.separator"));
        sb
                .append("                        } while (token.getType() != Node.Type.TEnd);");
        sb.append(System.getProperty("line.separator"));
        sb.append("                } catch (LexerException e) {");
        sb.append(System.getProperty("line.separator"));
        sb
                .append("                        System.out.println(e.getLine() + \",\" + e.getPos()");
        sb.append(System.getProperty("line.separator"));
        sb
                .append("                                        + \". Syntax error: Unexpected character '\" + e.getChar()");
        sb.append(System.getProperty("line.separator"));
        sb.append("                                        + \"'.\");");
        sb.append(System.getProperty("line.separator"));
        sb.append("                } catch (IOException e) {");
        sb.append(System.getProperty("line.separator"));
        sb
                .append("                        System.out.println(e.getMessage());");
        sb.append(System.getProperty("line.separator"));
        sb.append("                }");
        sb.append(System.getProperty("line.separator"));
        sb.append("        }");
        sb.append(System.getProperty("line.separator"));
        sb.append("}");
        sb.append(System.getProperty("line.separator"));
        return sb.toString();
    }

}
