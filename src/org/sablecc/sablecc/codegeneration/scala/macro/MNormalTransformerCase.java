/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.scala.macro;

import java.util.*;

public class MNormalTransformerCase {

  private final String pCaseType;
  private final MNormalTransformerCase mNormalTransformerCase = this;
  private final List<Object> eTransformCaseConstructorParameter = new LinkedList<Object>();
  private final List<Object> eChildTransform = new LinkedList<Object>();

  MNormalTransformerCase(String pCaseType) {
    if(pCaseType == null) throw new NullPointerException();
    this.pCaseType = pCaseType;
  }

  public MTransformCaseConstructorParameter newTransformCaseConstructorParameter(String pCaseName) {
    MTransformCaseConstructorParameter lTransformCaseConstructorParameter = new MTransformCaseConstructorParameter(pCaseName);
    this.eTransformCaseConstructorParameter.add(lTransformCaseConstructorParameter);
    return lTransformCaseConstructorParameter;
  }

  public MChildTransform newChildTransform(String pElementName, String pElementType) {
    MChildTransform lChildTransform = new MChildTransform(pElementName, pElementType);
    this.eChildTransform.add(lChildTransform);
    return lChildTransform;
  }

  String pCaseType() {
    return this.pCaseType;
  }

  private String rCaseType() {
    return this.mNormalTransformerCase.pCaseType();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("    case thisNode @ ");
    sb.append(rCaseType());
    sb.append("(_, _");
    if(this.eTransformCaseConstructorParameter.size() > 0) {
      sb.append(", ");
    }
    {
      boolean first = true;
      for(Object oTransformCaseConstructorParameter : this.eTransformCaseConstructorParameter) {
        if(first) {
          first = false;
        }
        else {
          sb.append(", ");
        }
        sb.append(oTransformCaseConstructorParameter.toString());
      }
    }
    sb.append(") =>");
    sb.append(System.getProperty("line.separator"));
    sb.append("      thisNode.copy(");
    {
      boolean first = true;
      for(Object oChildTransform : this.eChildTransform) {
        if(first) {
          first = false;
        }
        else {
          sb.append(", ");
        }
        sb.append(oChildTransform.toString());
      }
    }
    sb.append(")");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}
