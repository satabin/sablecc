/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.scala.macro;

import java.util.*;

public class MNormalTraverserCase {

  private final String pCaseType;
  private final MNormalTraverserCase mNormalTraverserCase = this;
  private final List<Object> eCaseConstructorParameter_EndCaseConstructorParameter = new LinkedList<Object>();
  private final List<Object> eChildTraverse = new LinkedList<Object>();

  MNormalTraverserCase(String pCaseType) {
    if(pCaseType == null) throw new NullPointerException();
    this.pCaseType = pCaseType;
  }

  public MCaseConstructorParameter newCaseConstructorParameter(String pCaseName) {
    MCaseConstructorParameter lCaseConstructorParameter = new MCaseConstructorParameter(pCaseName);
    this.eCaseConstructorParameter_EndCaseConstructorParameter.add(lCaseConstructorParameter);
    return lCaseConstructorParameter;
  }

  public MEndCaseConstructorParameter newEndCaseConstructorParameter() {
    MEndCaseConstructorParameter lEndCaseConstructorParameter = new MEndCaseConstructorParameter();
    this.eCaseConstructorParameter_EndCaseConstructorParameter.add(lEndCaseConstructorParameter);
    return lEndCaseConstructorParameter;
  }

  public MChildTraverse newChildTraverse(String pElementName) {
    MChildTraverse lChildTraverse = new MChildTraverse(pElementName);
    this.eChildTraverse.add(lChildTraverse);
    return lChildTraverse;
  }

  String pCaseType() {
    return this.pCaseType;
  }

  private String rCaseType() {
    return this.mNormalTraverserCase.pCaseType();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("    case ");
    sb.append(rCaseType());
    sb.append("(line, pos");
    if(this.eCaseConstructorParameter_EndCaseConstructorParameter.size() > 0) {
      sb.append(", ");
    }
    {
      boolean first = true;
      for(Object oCaseConstructorParameter_EndCaseConstructorParameter : this.eCaseConstructorParameter_EndCaseConstructorParameter) {
        if(first) {
          first = false;
        }
        else {
          sb.append(", ");
        }
        sb.append(oCaseConstructorParameter_EndCaseConstructorParameter.toString());
      }
    }
    sb.append(") =>");
    sb.append(System.getProperty("line.separator"));
    for(Object oChildTraverse : this.eChildTraverse) {
      sb.append(oChildTraverse.toString());
    }
    return sb.toString();
  }

}
