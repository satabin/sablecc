/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.scala;

public class MNormalElementAccessor {

  private final String pElementType;
  private final String pElementName;
  private final String pPkg;
  private final MNormalElementAccessor mNormalElementAccessor = this;

  MNormalElementAccessor(String pElementType, String pElementName, String pPkg) {
    if(pElementType == null) throw new NullPointerException();
    this.pElementType = pElementType;
    if(pElementName == null) throw new NullPointerException();
    this.pElementName = pElementName;
    if(pPkg == null) throw new NullPointerException();
    this.pPkg = pPkg;
  }

  String pElementType() {
    return this.pElementType;
  }

  String pElementName() {
    return this.pElementName;
  }

  String pPkg() {
    return this.pPkg;
  }

  private String rPkg() {
    return this.mNormalElementAccessor.pPkg();
  }

  private String rElementName() {
    return this.mNormalElementAccessor.pElementName();
  }

  private String rElementType() {
    return this.mNormalElementAccessor.pElementType();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("  protected[");
    sb.append(rPkg());
    sb.append("] def internalGet");
    sb.append(rElementName());
    sb.append(": N");
    sb.append(rElementType());
    sb.append(" = this.e");
    sb.append(rElementName());
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}
