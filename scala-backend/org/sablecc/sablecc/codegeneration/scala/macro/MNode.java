/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.scala.macro;

import java.util.*;

public class MNode {

  private final String pPkg;
  private final MNode mNode = this;
  private final List<Object> eDefaultPackage_SpecifiedPackage = new LinkedList<Object>();
  private final List<Object> eNodeTypeEnumEntry = new LinkedList<Object>();
  private final List<Object> eNodeProductionTypeEnumEntry = new LinkedList<Object>();
  private final List<Object> eNodeInternalTypeEnumEntry = new LinkedList<Object>();

  public MNode(String pPkg) {
    if(pPkg == null) throw new NullPointerException();
    this.pPkg = pPkg;
  }

  public MNodeTypeEnumEntry newNodeTypeEnumEntry(String pName) {
    MNodeTypeEnumEntry lNodeTypeEnumEntry = new MNodeTypeEnumEntry(pName);
    this.eNodeTypeEnumEntry.add(lNodeTypeEnumEntry);
    return lNodeTypeEnumEntry;
  }

  public MNodeProductionTypeEnumEntry newNodeProductionTypeEnumEntry(String pName) {
    MNodeProductionTypeEnumEntry lNodeProductionTypeEnumEntry = new MNodeProductionTypeEnumEntry(pName);
    this.eNodeProductionTypeEnumEntry.add(lNodeProductionTypeEnumEntry);
    return lNodeProductionTypeEnumEntry;
  }

  public MNodeInternalTypeEnumEntry newNodeInternalTypeEnumEntry(String pName) {
    MNodeInternalTypeEnumEntry lNodeInternalTypeEnumEntry = new MNodeInternalTypeEnumEntry(pName);
    this.eNodeInternalTypeEnumEntry.add(lNodeInternalTypeEnumEntry);
    return lNodeInternalTypeEnumEntry;
  }

  public MDefaultPackage newDefaultPackage(String pLanguageName) {
    MDefaultPackage lDefaultPackage = new MDefaultPackage(pLanguageName);
    this.eDefaultPackage_SpecifiedPackage.add(lDefaultPackage);
    return lDefaultPackage;
  }

  public MSpecifiedPackage newSpecifiedPackage(String pLanguageName, String pPackage) {
    MSpecifiedPackage lSpecifiedPackage = new MSpecifiedPackage(pLanguageName, pPackage);
    this.eDefaultPackage_SpecifiedPackage.add(lSpecifiedPackage);
    return lSpecifiedPackage;
  }

  String pPkg() {
    return this.pPkg;
  }

  private String rPkg() {
    return this.mNode.pPkg();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(new MHeader().toString());
    if(this.eDefaultPackage_SpecifiedPackage.size() > 0) {
      sb.append(System.getProperty("line.separator"));
    }
    for(Object oDefaultPackage_SpecifiedPackage : this.eDefaultPackage_SpecifiedPackage) {
      sb.append(oDefaultPackage_SpecifiedPackage.toString());
    }
    sb.append(System.getProperty("line.separator"));
    sb.append("abstract class Node {");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  import Node._");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  import Type._");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  def tpe: Type");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  import ProductionType._");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  def productionType: ProductionType");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  def text: String");
    sb.append(System.getProperty("line.separator"));
    sb.append("  def line: Int");
    sb.append(System.getProperty("line.separator"));
    sb.append("  def pos: Int");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  var parent: Node = _");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  override def toString =");
    sb.append(System.getProperty("line.separator"));
    sb.append("    \"\\\"\" + text + \"\\\"@(\" + line + \",\" + pos + \")\";");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  import InternalType._");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  protected[");
    sb.append(rPkg());
    sb.append("] def internalType: InternalType");
    sb.append(System.getProperty("line.separator"));
    sb.append("}");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("object Node {");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  object Type extends Enumeration {");
    sb.append(System.getProperty("line.separator"));
    sb.append("    type Type = Value");
    sb.append(System.getProperty("line.separator"));
    sb.append("    val");
    sb.append(System.getProperty("line.separator"));
    for(Object oNodeTypeEnumEntry : this.eNodeTypeEnumEntry) {
      sb.append(oNodeTypeEnumEntry.toString());
    }
    sb.append("    TEnd,");
    sb.append(System.getProperty("line.separator"));
    sb.append("    TAnonymous = Value");
    sb.append(System.getProperty("line.separator"));
    sb.append("  }");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  object ProductionType extends Enumeration {");
    sb.append(System.getProperty("line.separator"));
    sb.append("    type ProductionType = Value");
    sb.append(System.getProperty("line.separator"));
    sb.append("    val");
    sb.append(System.getProperty("line.separator"));
    for(Object oNodeProductionTypeEnumEntry : this.eNodeProductionTypeEnumEntry) {
      sb.append(oNodeProductionTypeEnumEntry.toString());
    }
    sb.append("    TNotAProduction = Value");
    sb.append(System.getProperty("line.separator"));
    sb.append("  }");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("  object InternalType extends Enumeration {");
    sb.append(System.getProperty("line.separator"));
    sb.append("    type InternalType = Value");
    sb.append(System.getProperty("line.separator"));
    sb.append("    val");
    sb.append(System.getProperty("line.separator"));
    for(Object oNodeInternalTypeEnumEntry : this.eNodeInternalTypeEnumEntry) {
      sb.append(oNodeInternalTypeEnumEntry.toString());
    }
    sb.append("    TEnd = Value");
    sb.append(System.getProperty("line.separator"));
    sb.append("  }");
    sb.append(System.getProperty("line.separator"));
    sb.append("  ");
    sb.append(System.getProperty("line.separator"));
    sb.append("}");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}
