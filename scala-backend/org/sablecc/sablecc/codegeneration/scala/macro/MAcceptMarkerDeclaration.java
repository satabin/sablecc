/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.sablecc.codegeneration.scala.macro;

public class MAcceptMarkerDeclaration {

  private final String pName;
  private final MAcceptMarkerDeclaration mAcceptMarkerDeclaration = this;
  private final MLexer mLexer;

  MAcceptMarkerDeclaration(String pName, MLexer mLexer) {
    if(pName == null) throw new NullPointerException();
    this.pName = pName;
    if(mLexer == null) throw new NullPointerException();
    this.mLexer = mLexer;
  }

  String pName() {
    return this.pName;
  }

  private String rPkg() {
    return this.mLexer.pPkg();
  }

  private String rName() {
    return this.mAcceptMarkerDeclaration.pName();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("  protected[");
    sb.append(rPkg());
    sb.append("] def acceptWithMarker");
    sb.append(rName());
    sb.append("(backCount: Int) = {");
    sb.append(System.getProperty("line.separator"));
    sb.append("    var bc = backCount");
    sb.append(System.getProperty("line.separator"));
    sb.append("    if(this.sb_contains_eof) {");
    sb.append(System.getProperty("line.separator"));
    sb.append("      this.sb_contains_eof = false");
    sb.append(System.getProperty("line.separator"));
    sb.append("      bc -= 1");
    sb.append(System.getProperty("line.separator"));
    sb.append("    }");
    sb.append(System.getProperty("line.separator"));
    sb.append("    val text = this.sb.toString.substring(0, this.marker");
    sb.append(rName());
    sb.append(" - bc)");
    sb.append(System.getProperty("line.separator"));
    sb.append("    val leftover = this.sb.toString.substring(this.marker");
    sb.append(rName());
    sb.append(" - bc, this.sb.length)");
    sb.append(System.getProperty("line.separator"));
    sb.append("    this.buffer.insert(0, leftover)");
    sb.append(System.getProperty("line.separator"));
    sb.append("    updateLinePos(text)");
    sb.append(System.getProperty("line.separator"));
    sb.append("    text");
    sb.append(System.getProperty("line.separator"));
    sb.append("  }");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}
